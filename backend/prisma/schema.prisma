// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Char(36)
  firstName String
  lastName  String
  isAdmin   Boolean
  address   String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order     Order[]
}

model Category {
  id        String     @id @default(uuid()) @db.Char(36)
  name      String
  fooditems FoodItem[]
  // foodItemId String @unique @default(auto()) @map("_id")
  // fooditems FoodItem[] @relation(fields: [foodItemId], references: [id])
}

model FoodItem {
  id          String      @id @default(uuid()) @db.Char(36)
  name        String
  img         String?
  options     Json
  description String?
  categoryId  String      @db.Char(36)
  category    Category    @relation(fields: [categoryId], references: [id])
  orderItems  OrderItem[] // Relation to OrderItem

  @@index([categoryId]) // Index for categoryId
}

model Order {
  id         String      @id @default(uuid()) @db.Char(36)
  email      String
  totalPrice Int
  userId     String      @db.Char(36)
  user       User        @relation(fields: [userId], references: [id])
  orderDate  DateTime    @default(now())
  orderItems OrderItem[] // Relation to OrderItem
}

model OrderItem {
  id         String   @id @default(uuid()) @db.Char(36)
  orderId    String   @db.Char(36)
  order      Order    @relation(fields: [orderId], references: [id])
  quantity   Int
  foodItemId String   @db.Char(36) // Single reference to FoodItem
  foodItem   FoodItem @relation(fields: [foodItemId], references: [id])

  @@index([orderId]) // Index for orderId
  @@index([foodItemId]) // Index for foodItemId
}
