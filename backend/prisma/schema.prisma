// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  firstName String
  lastName String
  isAdmin Boolean
  address String
  email String @unique
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order Order[]
}

model Category{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  fooditems FoodItem[]
  // foodItemId String @unique @default(auto()) @map("_id")
  // fooditems FoodItem[] @relation(fields: [foodItemId], references: [id])
}

model FoodItem {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  img String?
  options Int[]
  description String?
  categoryId String @db.ObjectId
  categoryName Category @relation(fields: [categoryId], references: [id])
  orderItems OrderItem[]
}

model Order {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  email String
  totalPrice Int
  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id])
  orderDate DateTime @default(now())
  orderItems OrderItem[]
}

model OrderItem {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  orderId String @db.ObjectId
  order Order @relation(fields: [orderId], references: [id])
  quantity Int 
  foodItemId String[] @db.ObjectId
  foodItems FoodItem @relation(fields: [foodItemId], references: [id])
}
